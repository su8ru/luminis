---
import '@fontsource/inter/400.css';
import '@fontsource/inter/500.css';
import '@fontsource/inter/700.css';

interface Props {
  title: string | null;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="ja">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="/favicon.ico" />
    <title>{title === null ? 'su8ru' : `${title} | su8ru`}</title>
    <meta name="viewport" content="width=device-width" />
    <script is:inline>
      const lsTheme = localStorage.getItem('theme');
      const isDark =
        lsTheme === null
          ? window.matchMedia('(prefers-color-scheme: dark)').matches
          : lsTheme === 'dark';
      isDark
        ? document.documentElement.classList.add('dark')
        : document.documentElement.classList.remove('dark');
    </script>
  </head>
  <body>
    <slot />
  </body>
</html>

<style>
  html {
    color-scheme: light;
    --text-color: hsl(204, 6%, 16%);
    --text-color-rgb: 38 41 43;
    --bg-color: hsl(196, 22%, 90%);
    --bg-color-rgb: 224 232 235;
    --accent-color: hsl(197, 80%, 50%);
    --accent-color-rgb: 25 172 230;
    --highlight-color: hsl(347, 80%, 60%);
    --highlight-color-rgb: 235 71 107;
  }
  html.dark {
    color-scheme: dark;
    --text-color: hsl(196, 22%, 90%);
    --text-color-rgb: 224 232 235;
    --bg-color: hsl(192, 10%, 10%);
    --bg-color-rgb: 23 27 28;
    --accent-color: hsl(197, 80%, 80%);
    --accent-color-rgb: 163 222 245;
  }
  body {
    font-family: Inter, 'Helvetica Neue', Arial, 'Hiragino Kaku Gothic ProN',
      'Hiragino Sans', Meiryo, sans-serif;
    min-height: 100dvh;
    background: var(--bg-color);
    color: var(--text-color);
  }
</style>

<!-- reset css -->
<style is:global>
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }
  * {
    margin: 0;
  }
  body {
    line-height: 1.8;
    -webkit-font-smoothing: antialiased;
  }
  img,
  picture,
  video,
  canvas,
  svg {
    display: block;
    max-width: 100%;
  }
  input,
  button,
  textarea,
  select {
    font: inherit;
  }
  p,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    overflow-wrap: break-word;
  }
  #root,
  #__next {
    isolation: isolate;
  }
</style>

<style is:global>
  h1,
  h2 {
    font-weight: 500;
  }
  h2 {
    font-size: 1.5rem;
    margin: 16px 0;
  }
  p {
    line-height: 2;
  }
  p + p {
    margin-top: 8px;
  }
  a,
  a:visited {
    color: var(--accent-color);
  }

  .rlc-container {
    display: flex;
    height: 120px;
    border: 1px solid rgb(var(--text-color-rgb) / 0.4);
    color: var(--text-color);
    text-decoration: none;
    overflow: hidden;
    border-radius: 12px;
    word-break: break-all;
    margin-top: 16px;
  }
  .rlc-info a,
  .rlc-info a:visited {
    color: var(--text-color);
  }
  .rlc-info {
    padding: 8px 16px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    gap: 4px;
  }
  .rlc-title {
    font-size: 1.1rem;
    font-weight: 600;
    line-height: 1.5;
    color: var(--text-color);
    display: -webkit-box;
    overflow: hidden;
    text-overflow: ellipsis;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }
  .rlc-description {
    color: var(--text-color);
    display: -webkit-box;
    overflow: hidden;
    text-overflow: ellipsis;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1;
  }
  .rlc-url-container {
    display: flex;
    gap: 4px;
  }
  .rlc-url {
    font-size: 0.9rem;
    line-height: 16px;
    color: var(--text-color);
    display: -webkit-box;
    overflow: hidden;
    text-overflow: ellipsis;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1;
  }
  .rlc-image-container {
    height: 100%;
    flex-shrink: 0;
  }
  .rlc-image {
    height: 100%;
    width: auto;
    object-fit: cover;
  }
  @media (max-width: 700px) {
    .rlc-image {
      aspect-ratio: 1 / 1;
    }
  }
</style>
